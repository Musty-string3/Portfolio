<div class="offset-lg-2 col-lg-4">
  <h4 style="text-align: center;">入力欄</h4>
  <%= form_with model: post, html: {onsubmit: "return validateForm()"} do |f| %>

    <!--投稿画像の設定-->
    <div class="form-group">
      <%= f.label :images, "画像(6枚まで投稿可)" %>
      <span class="form_essential">※必須</span>
      <%= f.file_field :images, accept: "image/*", multiple: true, onchange: "loadImage(this)" %>
      <div class="text-danger">
        <span class="post_images_error d-none", style="font-size: 14px;">画像は1～6枚の範囲で指定してください。</span>
      </div>
    </div>

    <!--投稿名の設定-->
    <div class="form-group">
      <%= f.label :post_name, "投稿名" %>
      <span class="form_essential">※必須</span>
      <%= f.text_field :post_name, class: "form-control valid-check" %>
      <div class="invalid-feedback">投稿名を入力してください。</div>
    </div>

    <!--投稿の説明の設定-->
    <div class="form-group">
      <%= f.label :explanation, "投稿の説明" %>
      <span class="form_essential">※必須</span>
      <%= f.text_area :explanation, class: "form-control valid-check" %>
      <div class="invalid-feedback">投稿の説明を入力してください。</div>
    </div>

    <!--タグの設定-->
    <div class="form-group">
      <%= f.label :tag, "タグ (、で区切ると複数タグ登録できます)" %>
      <%= f.text_field :tag, placeholder: "タグを入力", class: "form-control" %>
    </div>

    <%= f.submit "投稿する", id: "submit-btn", class:"btn btn-outline-info" %>
  <% end %>
  <!--form_withここまで-->
</div>

<!--入力内容の確認の設定-->
<div class="col-lg-5">
  <h4 style="text-align: center;">入力内容</h4>
  <p class="font-weight-bold">投稿画像：</p>
  <div id="preview"></div>
  <div id="error_message_post_image" class="text-danger"></div>
  <p>投稿名：<span id="check_post_name"></span></p>
  <p>投稿の説明：<span id="check_post_explanation"></span></p>
</div>

<script>

  // ref: https://blog.ver001.com/javascript-image-preview-multiple/

  // 投稿画像入力時に画面に画像を表示する
  function loadImage(obj){
    let fileReader;
    $('#preview').empty();  // previewの中身を全消去(empty)する
    $("#error_message_post_image").empty();
    if (obj.files.length > 6) {
      $("#error_message_post_image").html("画像は6枚以下で指定してください");
      return false;  //breakのようなもの
    }
  	for (i = 0; i < obj.files.length; i++) {
  		fileReader = new FileReader();
  		fileReader.onload = (function (e) {
  		  // idがpreviewを探し、その箇所に要素を追加(append)していく
  			$('#preview').append('<img class="m-1 preview_img" src="' + e.target.result + '">');
  		});
  		fileReader.readAsDataURL(obj.files[i]);
  	}
  }

  // 投稿名入力時に値を取得し、画面に1文字ずつ表示する
  const text_name = $("#post_post_name");
  text_name.on("input", function() {
    $(this).blur(function(){
      $("#check_post_name").text(text_name.val());
    });
  });

  const text_explanation = $('#post_explanation');
  text_explanation.on('input', function(){
    $(this).blur(function(){
      $("#check_post_explanation").text(text_explanation.val());
    });
  });

  // バリエーションエラー表示
  function validateForm() {
    // バリデーションエラーフラグ初期値
    let validateErrorFlg = false;

    // ファイルの選択バリデーション
    const postImages = $("#post_images")
    const postImagesError = $(".post_images_error")
    if (postImages.prop('files').length > 6 || postImages.prop('files').length === 0) {
      validateErrorFlg = true;
      postImagesError.removeClass('d-none');
      postImagesError.addClass('d-block');
    } else {
      postImagesError.removeClass('d-block');
      postImagesError.addClass('d-none');
    }

    changeValidClass($("#post_post_name")); // フォームチェック
    changeValidClass($("#post_explanation")); // フォームチェック

    // 対象のフォームにis-invalidが付与されていれば、
    // バリデーションエラーありと判定する
    $(".valid-check").each( function() {
      if ($(this).hasClass("is-invalid")) {
        validateErrorFlg = true; // フラグ上書き
      }
    });

    if (validateErrorFlg) {
      // submitボタンを再度有効化
      $.ajax({}).done(function() { $("#submit-btn").prop("disabled", false); })
      return false; // 送信処理中断
    }
  }

  // バリデーションチェックする入力欄のclass制御
  $(".valid-check").on("blur input", function () {
    changeValidClass($(this));
  })

  // バリデーションチェック結果に応じてclassを変更する
  // TODO toggleClass()使えないか？
  function changeValidClass(elem) {
    if (elem.val() === "") {
      elem.removeClass("is-valid");
      elem.addClass("is-invalid");
    } else {
      elem.removeClass("is-invalid");
      elem.addClass("is-valid");
    }
  }

</script>

<!--FIXME https://itsakura.com/js-textbox#s12-->

<!--const text = $("#post_post_name");-->
<!--text.on("input", function() {-->
<!--  $(this).blur(function(){-->
<!--    $("#post_name").text(text.val());-->
<!--  });-->
<!--});-->